name: BaekjoonHub to Blog
on:
  push:
    paths:
      - '**/README.md'

jobs:
  update-blog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout BaekjoonHub Repository
        uses: actions/checkout@v2
        with:
          repository: 'sms1875/CodingTestStudy'
          path: 'BaekjoonHub'

      - name: Convert README.md and Include Source Code
        id: convert
        run: |
          mkdir -p ./BaekjoonHub/_posts
          COMMIT_DATE=$(date -u +"%Y-%m-%d")

          for readme in $(find ./BaekjoonHub -name "README.md"); do
            # Get directory of README file to find code files
            PROBLEM_DIR=$(dirname "$readme")
            
            # Extract problem information from README.md
            TITLE=$(head -n 1 "$readme" | sed 's/\[//;s/\]//;s/\ - /: /;s/ /_/g')
            PLATFORM=$(echo "$TITLE" | cut -d'_' -f1)
            
            # Remove special characters from the title to create a valid filename
            SAFE_TITLE=$(echo "$TITLE" | sed 's/[#&?.,\/\]\[]//g')  # Remove special characters
            
            # Read README.md content and escape Liquid template syntax
            PROBLEM_INFO=$(cat "$readme" | sed 's/{{/\\{\\{/g; s/{%/\\{%/g')

            # Search for code files in the same directory
            CODE_FILES=$(find "$PROBLEM_DIR" -type f \( -name "*.cpp" -o -name "*.java" -o -name "*.py" \))

            # Include code in markdown content with proper line breaks
            CODE_CONTENT=""
            for code in $CODE_FILES; do
              LANG=$(echo "$code" | sed 's/.*\.//')  # Extract file extension for language
              CODE_BLOCK=$(cat "$code")
              
              # Use multiple line strings to maintain line breaks
              CODE_CONTENT="$CODE_CONTENT\n\n### 소스 코드 ($LANG)\n\`\`\`$LANG\n$CODE_BLOCK\n\`\`\`"
            done

            # Generate markdown content with proper line breaks
            MARKDOWN_CONTENT="---\n"
            MARKDOWN_CONTENT+="title: \"$TITLE\"\n"
            MARKDOWN_CONTENT+="date: $COMMIT_DATE\n"
            MARKDOWN_CONTENT+="categories: [ \"coding test\" ]\n"
            MARKDOWN_CONTENT+="tags: [ \"$PLATFORM\", \"coding test\" ]\n"
            MARKDOWN_CONTENT+="---\n\n"
            MARKDOWN_CONTENT+="$PROBLEM_INFO\n"
            MARKDOWN_CONTENT+="$CODE_CONTENT\n"

            # Create filename with commit date and sanitized problem title
            FILENAME=$(echo "$COMMIT_DATE-$SAFE_TITLE.md" | sed 's/ /-/g')

            # Save to _posts directory with actual line breaks using echo -e
            echo -e "$MARKDOWN_CONTENT" > "./BaekjoonHub/_posts/$FILENAME"
          done

      - name: Checkout Chirpy Blog Repository
        uses: actions/checkout@v2
        with:
          repository: 'sms1875/sms1875.github.io'
          path: 'ChirpyBlog'
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Move Generated Files to Blog
        run: |
          cp -R ./BaekjoonHub/_posts/* ./ChirpyBlog/_posts/

      - name: Commit and Push to Chirpy Blog
        working-directory: ChirpyBlog
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add new problem posts from BaekjoonHub"
          git push origin main
